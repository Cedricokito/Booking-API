// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  name      String
  email     String   @unique
  password  String
  // Role can be either 'USER' or 'ADMIN'
  role      String   @default("USER")
  bookings  Booking[]
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Host {
  id        String     @id @default(uuid())
  username  String     @unique
  name      String
  email     String     @unique
  password  String?
  listings  Property[] // 1-to-many: Host -> Property
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Property {
  id            String      @id @default(uuid())
  title         String
  description   String
  location      String
  pricePerNight Decimal
  hostId        String
  host          Host        @relation(fields: [hostId], references: [id], onDelete: Cascade)
  amenities     Amenity[]   @relation("PropertyAmenities")
  bookings      Booking[]
  reviews       Review[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Amenity {
  id         String      @id @default(uuid())
  name       String      @unique
  properties Property[]  @relation("PropertyAmenities")
}

model Booking {
  id         String    @id @default(uuid())
  startDate  DateTime
  endDate    DateTime
  status     String
  userId     String
  propertyId String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  property   Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Review {
  id         String    @id @default(uuid())
  rating     Int
  comment    String
  userId     String
  propertyId String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  property   Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
