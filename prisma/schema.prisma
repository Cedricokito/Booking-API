// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  properties Property[]
  bookings  Booking[]
  reviews   Review[]
}

model Property {
  id          String    @id @default(uuid())
  title       String
  description String
  price       Float
  location    String
  amenities   String    // JSON string of amenities
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  bookings    Booking[]
  reviews     Review[]
}

model Booking {
  id         String   @id @default(uuid())
  startDate  DateTime
  endDate    DateTime
  status     String   @default("PENDING") // PENDING, CONFIRMED, CANCELLED, COMPLETED
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String
  propertyId String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  reviews    Review[]

  @@index([userId])
  @@index([propertyId])
}

model Review {
  id         String   @id @default(uuid())
  rating     Int
  comment    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String
  propertyId String
  bookingId  String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  booking    Booking  @relation(fields: [bookingId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([propertyId])
  @@index([bookingId])
}
